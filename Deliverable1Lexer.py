# Generated from Deliverable1.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,22,152,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,
        3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,5,15,82,8,15,10,
        15,12,15,85,9,15,1,16,3,16,88,8,16,1,16,4,16,91,8,16,11,16,12,16,
        92,1,16,1,16,4,16,97,8,16,11,16,12,16,98,3,16,101,8,16,1,17,1,17,
        1,17,1,17,1,17,1,17,1,17,1,17,1,17,3,17,112,8,17,1,18,1,18,5,18,
        116,8,18,10,18,12,18,119,9,18,1,18,1,18,1,18,5,18,124,8,18,10,18,
        12,18,127,9,18,1,18,3,18,130,8,18,1,19,4,19,133,8,19,11,19,12,19,
        134,1,19,1,19,1,20,4,20,140,8,20,11,20,12,20,141,1,21,1,21,5,21,
        146,8,21,10,21,12,21,149,9,21,1,21,1,21,2,117,125,0,22,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        31,16,33,17,35,18,37,19,39,20,41,21,43,22,1,0,6,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,
        32,1,0,9,9,2,0,10,10,13,13,163,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,
        0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
        0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,
        0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
        0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,1,45,1,0,0,0,
        3,47,1,0,0,0,5,50,1,0,0,0,7,53,1,0,0,0,9,56,1,0,0,0,11,59,1,0,0,
        0,13,61,1,0,0,0,15,63,1,0,0,0,17,65,1,0,0,0,19,67,1,0,0,0,21,69,
        1,0,0,0,23,71,1,0,0,0,25,73,1,0,0,0,27,75,1,0,0,0,29,77,1,0,0,0,
        31,79,1,0,0,0,33,87,1,0,0,0,35,111,1,0,0,0,37,129,1,0,0,0,39,132,
        1,0,0,0,41,139,1,0,0,0,43,143,1,0,0,0,45,46,5,61,0,0,46,2,1,0,0,
        0,47,48,5,43,0,0,48,49,5,61,0,0,49,4,1,0,0,0,50,51,5,45,0,0,51,52,
        5,61,0,0,52,6,1,0,0,0,53,54,5,42,0,0,54,55,5,61,0,0,55,8,1,0,0,0,
        56,57,5,47,0,0,57,58,5,61,0,0,58,10,1,0,0,0,59,60,5,91,0,0,60,12,
        1,0,0,0,61,62,5,44,0,0,62,14,1,0,0,0,63,64,5,93,0,0,64,16,1,0,0,
        0,65,66,5,43,0,0,66,18,1,0,0,0,67,68,5,45,0,0,68,20,1,0,0,0,69,70,
        5,42,0,0,70,22,1,0,0,0,71,72,5,47,0,0,72,24,1,0,0,0,73,74,5,37,0,
        0,74,26,1,0,0,0,75,76,5,40,0,0,76,28,1,0,0,0,77,78,5,41,0,0,78,30,
        1,0,0,0,79,83,7,0,0,0,80,82,7,1,0,0,81,80,1,0,0,0,82,85,1,0,0,0,
        83,81,1,0,0,0,83,84,1,0,0,0,84,32,1,0,0,0,85,83,1,0,0,0,86,88,5,
        45,0,0,87,86,1,0,0,0,87,88,1,0,0,0,88,90,1,0,0,0,89,91,7,2,0,0,90,
        89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,0,0,0,93,100,1,0,
        0,0,94,96,5,46,0,0,95,97,7,2,0,0,96,95,1,0,0,0,97,98,1,0,0,0,98,
        96,1,0,0,0,98,99,1,0,0,0,99,101,1,0,0,0,100,94,1,0,0,0,100,101,1,
        0,0,0,101,34,1,0,0,0,102,103,5,84,0,0,103,104,5,114,0,0,104,105,
        5,117,0,0,105,112,5,101,0,0,106,107,5,70,0,0,107,108,5,97,0,0,108,
        109,5,108,0,0,109,110,5,115,0,0,110,112,5,101,0,0,111,102,1,0,0,
        0,111,106,1,0,0,0,112,36,1,0,0,0,113,117,5,34,0,0,114,116,9,0,0,
        0,115,114,1,0,0,0,116,119,1,0,0,0,117,118,1,0,0,0,117,115,1,0,0,
        0,118,120,1,0,0,0,119,117,1,0,0,0,120,130,5,34,0,0,121,125,5,39,
        0,0,122,124,9,0,0,0,123,122,1,0,0,0,124,127,1,0,0,0,125,126,1,0,
        0,0,125,123,1,0,0,0,126,128,1,0,0,0,127,125,1,0,0,0,128,130,5,39,
        0,0,129,113,1,0,0,0,129,121,1,0,0,0,130,38,1,0,0,0,131,133,7,3,0,
        0,132,131,1,0,0,0,133,134,1,0,0,0,134,132,1,0,0,0,134,135,1,0,0,
        0,135,136,1,0,0,0,136,137,6,19,0,0,137,40,1,0,0,0,138,140,7,4,0,
        0,139,138,1,0,0,0,140,141,1,0,0,0,141,139,1,0,0,0,141,142,1,0,0,
        0,142,42,1,0,0,0,143,147,5,35,0,0,144,146,8,5,0,0,145,144,1,0,0,
        0,146,149,1,0,0,0,147,145,1,0,0,0,147,148,1,0,0,0,148,150,1,0,0,
        0,149,147,1,0,0,0,150,151,6,21,0,0,151,44,1,0,0,0,13,0,83,87,92,
        98,100,111,117,125,129,134,141,147,1,6,0,0
    ]

class Deliverable1Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    VARNAME = 16
    NUMBER = 17
    BOOLEAN = 18
    STRING = 19
    WS = 20
    TAB = 21
    COMMENT = 22

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "'+='", "'-='", "'*='", "'/='", "'['", "','", "']'", 
            "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "VARNAME", "NUMBER", "BOOLEAN", "STRING", "WS", "TAB", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "VARNAME", "NUMBER", "BOOLEAN", "STRING", "WS", 
                  "TAB", "COMMENT" ]

    grammarFileName = "Deliverable1.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


